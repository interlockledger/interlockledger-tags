<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <LangVersion>preview</LangVersion>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <Authors>Rafael Teixeira</Authors>
        <Company>InterlockLedger Network</Company>
        <Copyright>Copyright (c) 2018-2025 InterlockLedger Network</Copyright>
        <Description>Upgrading core libs</Description>
        <PackageLicenseFile>LICENSE</PackageLicenseFile>
        <PackageProjectUrl>https://interlockledger.network/</PackageProjectUrl>
        <Product>InterlockLedger</Product>
        <RepositoryType>git</RepositoryType>
        <RepositoryUrl>https://github.com/interlockledger/interlockledger-tags.git</RepositoryUrl>
        <Version>61.3.0</Version>
        <PackageId>InterlockLedger.Tags</PackageId>
        <PackageReleaseNotes>Needed one more public property in ISigningKey EncodedBytes</PackageReleaseNotes>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <PackageReadmeFile>README.md</PackageReadmeFile>
    </PropertyGroup>


    <ItemGroup>
        <Using Include="System.Text" />
        <Using Include="System.Text.Json.Serialization" />
        <Using Include="System.Text.RegularExpressions" />
        <Using Include="System.Globalization" />
        <Using Include="System.ComponentModel" />
        <Using Include="System.Diagnostics.CodeAnalysis" />
    </ItemGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
        <DefineConstants>DEBUG</DefineConstants>
        <DebugType>full</DebugType>
        <DebugSymbols>true</DebugSymbols>
    </PropertyGroup>
    <ItemGroup>
        <None Include="..\README.md">
            <Pack>True</Pack>
            <PackagePath>\</PackagePath>
        </None>
        <None Include="..\LICENSE">
            <Pack>True</Pack>
            <PackagePath></PackagePath>
        </None>
    </ItemGroup>
    <Target Name="TagSources">
        <Exec Command="git tag v$(Version)" ContinueOnError="true" StandardErrorImportance="low" StandardOutputImportance="low" IgnoreExitCode="true" />
        <Message Importance="high" Text="Recent tags:" />
        <Exec Command="git tag --sort=-creatordate | grep v | head -n 1" ContinueOnError="true" StandardErrorImportance="high" StandardOutputImportance="high" IgnoreExitCode="true" />
    </Target>

    <Target Name="PublishLocally" DependsOnTargets="Build;Pack" AfterTargets="Pack" Condition="Exists('$(INTERLOCK_LOCAL_NUGETS_FOLDER)')">
        <ItemGroup>
            <NugetPackages Include="$(PackageOutputAbsolutePath)$(PackageId).$(Version).nupkg" />
        </ItemGroup>
        <Message Importance="high" Text="Publish to Local Nugets Folder '$(INTERLOCK_LOCAL_NUGETS_FOLDER)': @(NugetPackages)" />
        <Copy DestinationFolder="$(INTERLOCK_LOCAL_NUGETS_FOLDER)" SourceFiles="@(NugetPackages)" ContinueOnError="true" SkipUnchangedFiles="false" />
    </Target>

    <Target Name="NugetOrg" Condition="'$(Configuration)'=='Release'" DependsOnTargets="Pack">
        <PropertyGroup>
            <NugetPackage>$(PackageOutputAbsolutePath)$(PackageId).$(Version).nupkg</NugetPackage>
        </PropertyGroup>
        <Message Importance="high" Text="Pushing $(NugetPackage)" Condition="Exists('$(NugetPackage)') and '$(NUGET_API_KEY)'!=''" />
        <Exec Command="dotnet nuget push --skip-duplicate -s nuget.org -k $(NUGET_API_KEY) $(NugetPackage)" ContinueOnError="true" StandardErrorImportance="high" StandardOutputImportance="high" IgnoreExitCode="true" Condition="Exists('$(NugetPackage)') and '$(NUGET_API_KEY)'!=''" />
    </Target>


    <ItemGroup>
        <PackageReference Include="InterlockLedger.Commons" Version="19.0.0" />
        <PackageReference Include="InterlockLedger.Tags.ILInt" Version="14.0.1" />
        <PackageReference Include="BouncyCastle.Cryptography" Version="2.5.1" />
    </ItemGroup>

</Project>
